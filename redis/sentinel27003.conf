port 27003
daemonize yes
pidfile "sentinel27003.pid"
logfile "sentinel27003.log"
# 마스터 노드 모두를 모니터링 한다.
# 3개의 sentinel 중 2개이상(quorum(정족수),과반수) 마스터 내려갔음을 인지해야 동작(slave->master승격)하도록 한다.
sentinel monitor redis3 127.0.0.1 7003 2
sentinel monitor redis1 127.0.0.1 7001 2
sentinel monitor redis2 127.0.0.1 7005 2
# redis master 접속에 암호가 필요한경우
sentinel auth-pass redis3 ysoftmanPassword123
sentinel auth-pass redis1 ysoftmanPassword123
sentinel auth-pass redis2 ysoftmanPassword123
# redis master 가 10 초동안 응답없으면 다운으로 인지
sentinel down-after-milliseconds redis3 10000
sentinel down-after-milliseconds redis1 10000
sentinel down-after-milliseconds redis2 10000
# 장애조치(failover) 180초 동안 응답이 없으면 취소한다.

# redis 장애 인지시 노티에 사용할 스크립트
# sentinel notification-script redis1 sentinel-notify.sh
# Generated by CONFIG REWRITE
protected-mode no
user default on nopass sanitize-payload ~* &* +@all
dir "/Users/ysoftman/workspace/test_code/redis"
sentinel myid f34c9575bd3e186921565238f437b1d4a65919cf
sentinel config-epoch redis3 0
sentinel leader-epoch redis3 0
sentinel config-epoch redis1 0
sentinel leader-epoch redis1 0
sentinel config-epoch redis2 1
sentinel leader-epoch redis2 1
sentinel current-epoch 1
sentinel known-replica redis3 127.0.0.1 7006
sentinel known-replica redis1 127.0.0.1 7004
sentinel known-replica redis2 127.0.0.1 7002
sentinel known-sentinel redis3 127.0.0.1 27001 16c1d96ecaecbbee42f528a08e5d1706ad2b69cb
sentinel known-sentinel redis3 127.0.0.1 27002 41580dba3dace7b15e998addcd554fbf29a29ed1
sentinel known-sentinel redis1 127.0.0.1 27001 16c1d96ecaecbbee42f528a08e5d1706ad2b69cb
sentinel known-sentinel redis1 127.0.0.1 27002 41580dba3dace7b15e998addcd554fbf29a29ed1
sentinel known-sentinel redis2 127.0.0.1 27001 16c1d96ecaecbbee42f528a08e5d1706ad2b69cb
sentinel known-sentinel redis2 127.0.0.1 27002 41580dba3dace7b15e998addcd554fbf29a29ed1
