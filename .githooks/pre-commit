#!/bin/bash
reset_color='\033[0m'
black='\033[0;30m'
red='\033[0;31m'
green='\033[0;32m'
yellow='\033[0;33m'
blue='\033[0;34m'
purple='\033[0;35m'
cyan='\033[0;36m'
white='\033[0;37m'
darkgray='\033[1;30m'
lightred='\033[1;31m'
lightgreen='\033[1;32m'
lightyellow='\033[1;33m'
lightblue='\033[1;34m'
lightpurple='\033[1;35m'
lightcyan='\033[1;36m'
lightwhite='\033[1;37m'

# 참고
# man githooks
# This hook is invoked by git-commit(1), and can be bypassed with the --no-verify option.

ECHO="echo"
# "bash"
current_shell=$(ps -p $$ | awk 'NR==2')
if [[ $current_shell == *"bash"* ]]; then
    ECHO="echo -e"
fi

install_python_pkg() {
    # echo ${@}
    for i in "$@"; do
        if ! ${1} --version /dev/null 2>&1; then
            set -e
            pip3 install ${1} >/dev/null
            set -
        fi
    done
}

install_python_pkg "pylint black"

failed_and_exit() {
    local check_name=${1}
    $ECHO "${red}[.githooks/pre-commit] failed to check $check_name\nplease check errors/warnings above${reset_color}"
    exit 1
}

# --cached(--staged) : 스테이징된것만
# select only Added (A), Copied (C), Deleted (D), Modified (M), Renamed (R), changed (T), Unmerged (U), Unknown (X)
# 소문자인로 사용시 exclude
# --diff-filter=d : 삭제된 파일은 빼고
# --name-only : diff 내용없이 파일명만 출력
# . ':!./cpp' ':!./boost' : ./cpp 와 ./boost 디렉토리를 제외한 현재 하위 디렉토리에 대해서 diff,
# : 사용참고 <https://git-scm.com/docs/gitglossary#Documentation/gitglossary.txt-aiddefpathspecapathspec>
staging_files=$(git diff --diff-filter=d --name-only -- . ':!./cpp' ':!./boost')
if command -v rg &>/dev/null; then
    echo ".go import alias 에 대문자가 포함된 경우 체크"
    for file in $staging_files; do
        echo $file
        if [[ $file != *".go" ]]; then
            continue
        fi
        import_alias=$(rg -e github. -IN -g $file | sed -e 's/^[[:space:]]*//' | rg -iv "^//|^--|^#" | sed -e 's/"?github.*$//' | sort | uniq | rg '[A-Z]')
        if [[ $import_alias != "" ]]; then
            failed_and_exit "import alias 에 대문자가 포함되어 있습니다.\n$import_alias in $file"
        fi
    done
fi

staging_files=$(git diff --diff-filter=d --cached --name-only -- . ':!./cpp' ':!./boost' | grep ".py$")
if [[ ${staging_files} == "" ]]; then
    $ECHO "${cyan}[.githooks/pre-commit] there's no staging files...${reset_color}"
    exit 0
fi

# pylint 체크
for file in $staging_files; do
    if ! pylint --disable="all" --enable="W0611" $file; then
        failed_and_exit "pylint"
    fi
done

# black 포맷팅
for file in $staging_files; do
    if ! black $file; then
        failed_and_exit "black"
    fi
    git add $file
done

# typos 로 오타 체크
if command -v typos >/dev/null; then
    if ! typos; then
        failed_and_exit "typos"
    fi
fi

$ECHO "${green}[.githooks/pre-commit] succeeded~${reset_color}"
exit 0
