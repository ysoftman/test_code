#!/bin/bash

# figlet ysoftman
# ASCII Arts 에는 "'\ 등의 문자가 포함되어 있어 다음과 같이 echo 로 출력하기 힘들다.
# echo '
#                   __ _
#  _   _ ___  ___  / _| |_ _ __ ___   __ _ _ __
# | | | / __|/ _ \| |_| __| '_ ` _ \ / _` | '_ \
# | |_| \__ \ (_) |  _| |_| | | | | | (_| | | | |
#  \__, |___/\___/|_|  \__|_| |_| |_|\__,_|_| |_|
#  |___/
# '

# 다음과 같은 방법을 사용하자.
# zzz 가 입력되기까지의 모든 문자를 연결해서 stdout 으로 보낸다.
cat << "zzz"
                  __ _
 _   _ ___  ___  / _| |_ _ __ ___   __ _ _ __
| | | / __|/ _ \| |_| __| '_ ` _ \ / _` | '_ \
| |_| \__ \ (_) |  _| |_| | | | | | (_| | | | |
 \__, |___/\___/|_|  \__|_| |_| |_|\__,_|_| |_|
 |___/
zzz

# 출력하고 파일로 저장
filename=${0##*/}
filename=${filename%%.sh}.out
echo "outfilename : ${filename}"
rm -rf ${filename}
# ysoftman 파일로 입력
cat > ${filename} << 'zzz'
ysoftman input test
zzz
# _`', 등이 명령어로 처리되면서
# _: command not found
# 과 같은 에러가 발생하며 온전한 내용으로 입력되지 못한다.
# cat >> ${filename} << zzz
# 명령어 취급 에러를 처리하기 위해선 구분자를 quote 로 묶어 확장되는것을 막아야 한다.
# 'zzz' 또는 "zzz"
cat >> ${filename} << "zzz"
                  __ _
 _   _ ___  ___  / _| |_ _ __ ___   __ _ _ __
| | | / __|/ _ \| |_| __| '_ ` _ \ / _` | '_ \
| |_| \__ \ (_) |  _| |_| | | | | | (_| | | | |
 \__, |___/\___/|_|  \__|_| |_| |_|\__,_|_| |_|
 |___/
zzz


# $(dollar sign)을 살리기 위해선 구분자를 quote 로 묶어 확장되는것을 막아야 한다.
# 'zzz' 또는 "zzz"
cat >> ${filename} << 'zzz'
a="ysoftman"
echo ${a}
zzz

cat ${filename}
