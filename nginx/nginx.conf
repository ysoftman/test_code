
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '"$remote_addr" '
                      '"$remote_user" '
                      '"[$time_local]" '
                      '"$status" '
                      '"$body_bytes_sent" '
                      '"$http_referer" '
                      '"$http_user_agent" '
                      '"$http_x_forwarded_for" '
                      '"$server_addr" '
                      '"$server_name" '
                      '"$server_port" '
                      '"$server_protocol" '
                      '"$host" '
                      '"$hostname" '
                      '"$scheme" '
                      '"$request" '
                      '"$request_id" '
                      '"$request_time" '
                      '"$request_filename "'
                      ;


    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    # 업스트림할 백엔드 서버
    upstream ysoftman_web_server {
        server 127.0.0.1:55555;
        # bakcup : marks the server as a backup server. It will be passed requests when the primary servers are unavailable.
        server 127.0.0.1:55555 backup;
        server 127.0.0.1:55555 backup;
    }

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        # echo 모듈 테스트
        location /echo {
            default_type text/plain;
            echo hello;
            echo_sleep 2;
            echo world;
        }

        # /main 또는 /test 요청되는 경우
        location ~ ^/(main|test|zzz)$ {
            proxy_set_header Host $host;
            proxy_set_header Https-On $https;
            proxy_pass_request_headers  on;
            proxy_read_timeout     300;
            proxy_connect_timeout  300;
            # 커넥션에러, 타임아웃, 502, 404 발생할때 backup 업스트림서버로 다시 요청
            proxy_next_upstream error timeout http_502 http_404;
            proxy_pass http://ysoftman_web_server/$1?$args;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
